[{"/Users/okamotoshun/folder/practice/toolkit-todo/src/index.tsx":"1","/Users/okamotoshun/folder/practice/toolkit-todo/src/features/counter/Counter.tsx":"2","/Users/okamotoshun/folder/practice/toolkit-todo/src/features/counter/counterSlice.ts":"3","/Users/okamotoshun/folder/practice/toolkit-todo/src/app/store.ts":"4"},{"size":648,"mtime":1609156256310,"results":"5","hashOfConfig":"6"},{"size":1626,"mtime":1609159890835,"results":"7","hashOfConfig":"8"},{"size":1851,"mtime":1609156256310,"results":"9","hashOfConfig":"6"},{"size":414,"mtime":1609156256309,"results":"10","hashOfConfig":"8"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c71eot",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"b5ih14",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/okamotoshun/folder/practice/toolkit-todo/src/index.tsx",[],"/Users/okamotoshun/folder/practice/toolkit-todo/src/features/counter/Counter.tsx",["20"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  decrement,\r\n  increment,\r\n  incrementByAmount,\r\n  incrementAsync,\r\n  selectCount,\r\n} from './counterSlice';\r\nimport styles from './Counter.module.css';\r\n\r\nexport function Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={e => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          onClick={() =>\r\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\r\n          }\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/Users/okamotoshun/folder/practice/toolkit-todo/src/features/counter/counterSlice.ts",[],"/Users/okamotoshun/folder/practice/toolkit-todo/src/app/store.ts",[],{"ruleId":"21","severity":1,"message":"22","line":12,"column":8,"nodeType":"23","messageId":"24","endLine":12,"endColumn":26},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType"]